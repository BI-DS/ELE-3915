[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Excel Programming and Automation",
    "section": "",
    "text": "Welcome to the course ELE 3915 Excel Programming and Automation. You’re about to get your hands dirty! This course is about being able to do cool things Excel and TypeScript. It should give you the confidence to assert that you can program in Excel. And it gives you an introduction to TypeScript, a popular general-purpose programming language used in Microsoft Office on the web. The slides can be found on Github, in the slides directory.\nIf you need to get in contact with me, please send an e-mail to jonas.moss@bi.no. I do not check It’s learning often.\n\n\n\n\n\n\nWarning\n\n\n\nThis webpage is being continuously updated during. Most of the chapters are not finished.\n\n\n\n\nThe course is split into into four parts.\n\nLecture 1–3. Basic Excel usage, including formulas such as SUM ,COUNTIFS, INDEX, and MATCH. We focus on general mathematical formulas and data manipulation, in addition to simple formatting. Roughly speaking, these lectures cover the sort of Excel you should expect to see in lecacy Excel sheets. Most of the curriculum is covered on the excellent webpage ExcelJet.\nLecture 4–6. These lectures covers modern Excel formulas using dynamic arrays, LAMBDA and LET. Many of these features are just a couple of years old (as of 2023). I would not expect most employers to know about them. These features can do quite a bit of what Visual Basic for Applications (VBA) did in legacy worksheets. Programming using LAMBDA and LET is difficult, so make sure you take the exercises seriously. Again, most of the curriculum is covered on ExcelJet.\nLecture 7–9. Covers power query, power pivot, and DAX. These are modern tools for data visualization, data cleaning, and data manipulation. These tools are likely to form the core of your automation in Excel. They are widely regarded as the most important tools in the Excel analysts toolbox.\nLecture 10–14. These lectures contain an introduction to TypeScript and its application in Excel. Take note that we assume no previous exposure to programming in this course. TypeScript is a typed modification of JavaScript, the dominant language in web development, and has application far beyond Excel. The lectures will focus on programming in TypeScript in general, and the emphasis is on exercises.\n\n\n\n\nMost of the course is about programming. Students often find programming hard. Don’t expect to be able solve every exercise in 5 minutes! Solving programming exercises often take a long time, and you need to persevere.\nBe aware that the difficulty of this course is uneven. For instance, lectures on LAMBDA and LET are harder than the first three lectures, and the lectures on power query are likely to be easier. Do not think this course will be a walk in the park.\nTo become a decent programmer it’s a good idea to\n\nDo a lot of exercises.\nSpend at least 20 minutes on each exercise before you give up. You need to think really hard. Don’t expect to be able to solve the problem without making an effort.\nDo the exercise yourself after you have looked at the solution! Close the window and do it from memory. It’s also a good idea to revisit the same exercise later on, e.g. the next day, to make sure you’re able to do it.\nTinker around, either modifying exercises yourself, or with your own ideas. If your tinkering leads to something cool, tell me! Use Kaggle to download data sets to tinker with and Mockaroo to generate fake but plausible-looking data sets.\n\nDo not to spend an inordinate amount of time on an exercise before you check the solution. If you have spent 1 hour on an exercise and haven’t gotten anywhere, it might be smart save yourself some time and look at the solution.\nMoreover, be aware that programming is often extremely frustrating. It’s like talking to someone who just simply refuses to understand what you’re saying, no matter how many times you repeat yourself. It’s normal and expected to feel frustrated!\nThere are many tips online about learning to program, e.g., this collection of tips. But it mostly boils down to spending a lot of time solving problems.\n\n\n\nCurious how this site was made? It is written using Quarto books."
  }
]