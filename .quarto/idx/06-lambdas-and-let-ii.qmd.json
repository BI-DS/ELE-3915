{"title":"Programming in Excel (iii): `REDUCE`, `SCAN`, and applications","markdown":{"headingText":"Programming in Excel (iii): `REDUCE`, `SCAN`, and applications","containsRefs":false,"markdown":"\n::: callout-important\nThis page is ***not finished***, but might contain notes from the course developers. The curriculum, exercises, and recommended resources listed on this page is subject to change.\n:::\n\n## Curriculum\n\nExcel is equipped with many functions for handling dynamic arrays and `LAMBDA` functions. The most important are `FILTER`, `MAP` (and its cousins `BYCOL`, `BYROW`, and `MAKEARRAY`), and the pair `REDUCE` and `SCAN`.\n\nMost data analysis tasks can be done using a combination of `FILTER`, `MAP`, and `REDUCE/SCAN`, where array manipulation (e.g. `CHOOSEROWS` and `HSTACK`) and local variable (`LET`) are used as needed.\n\nThe `REDUCE` and `SCAN` functions are somewhat harder to understand than most of the functions covered until now, and we will spend some time explaining them.\n\nWe cover four functions in this lecture.\n\n1.  `ISOMITTED` is used for optional arguments in `LAMBDA` functions.\n2.  `OFFSET`\n    1.  Compared to INDEX\n\n    2.  Compared to CHOOSEROWS.\n\n    3.  Is oldschool and does not work with dynamic arrays.\n3.  `REDUCE`\n    1.  [Excel REDUCE Function - LAMBDA Array Formulas in Excel & Google Sheets](https://www.youtube.com/watch?v=Gt7_BtFYfBw&ab_channel=LearnGoogleSheets%26ExcelSpreadsheets)\n\n    2.  Reduces an array into a single output.\n\n    3.  Generalizes `SUM` and `PRODUCT`.\n4.  `SCAN`.\n    1.  Reduces an array, but keeps the output for all consecutive subarrays.\n\n    2.  Generalizes the cumulative `SUM`.\n\n## Exercises\n\n### Utility functions\n\nRecall that `FILTER` does not take the same sort of arguments as e.g. `MAP`. Its second argument is an array of truth values, not a `LAMBDA` function. That is OK, but it's inconsistent with most ofther functions of dynamic arrays. Make a function\n\n-   `FILTER_(array; lambda)` Returns the array consisting of elements from `array` where `lambda(x)` is `TRUE`.\n-   `TAKEWHILE(array; lambda)` Takes elements from `array` until the `LAMBDA` function `lambda` returns false.\n-   `MAPWHILE(array;mapper;predicate)` Maps `mapper` onto array until the `predicate` function returns `FALSE`.\n-   `FILTERBY(out;filter_array;lambda)` Returns the array consisting of elements from `out` where `lambda(x)` evaluates to `TRUE`.\n-   `ENUMERATE(array)` Takes a one-dimensional array (a column) merges it with `SEQUENCE(R)`, yielding a two-dimensional array.\n\n## Recommended resources\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"nord","output-file":"06-lambdas-and-let-ii.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","editor":"visual","theme":"zephyr"},"extensions":{"book":{"multiFile":true}}}}}